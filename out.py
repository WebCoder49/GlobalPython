nombre = ""
frase_para_escribir = 12
def letras_de_palabra ( palabra ) : # Scope([['', {'ArithmeticError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'AssertionError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'AttributeError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'BaseException': ['<name>', {'args': ['<name>', None, None, ['getset_descriptor']], 'with_traceback': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'BlockingIOError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'BrokenPipeError': ['<name>', {}, ['args', 'kwargs'], [['ConnectionError']]], 'BufferError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'BytesWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'ChildProcessError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'ConnectionAbortedError': ['<name>', {}, ['args', 'kwargs'], [['ConnectionError']]], 'ConnectionError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'ConnectionRefusedError': ['<name>', {}, ['args', 'kwargs'], [['ConnectionError']]], 'ConnectionResetError': ['<name>', {}, ['args', 'kwargs'], [['ConnectionError']]], 'DeprecationWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'EOFError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'Ellipsis': ['<name>', None, None, ['ellipsis']], 'EnvironmentError': ['<name>', {'characters_written': ['<name>', None, None, ['getset_descriptor']], 'errno': ['número_de_error', None, None, ['member_descriptor']], 'filename': ['<name>', None, None, ['member_descriptor']], 'filename2': ['<name>', None, None, ['member_descriptor']], 'strerror': ['<name>', None, None, ['member_descriptor']], 'winerror': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'Exception': ['<name>', {}, ['args', 'kwargs'], [['BaseException']]], 'False': ['Falso', None, None, ['bool']], 'FileExistsError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'FileNotFoundError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'FloatingPointError': ['<name>', {}, ['args', 'kwargs'], [['ArithmeticError']]], 'FutureWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'GeneratorExit': ['<name>', {}, ['args', 'kwargs'], [['BaseException']]], 'IOError': ['<name>', {'characters_written': ['<name>', None, None, ['getset_descriptor']], 'errno': ['número_de_error', None, None, ['member_descriptor']], 'filename': ['<name>', None, None, ['member_descriptor']], 'filename2': ['<name>', None, None, ['member_descriptor']], 'strerror': ['<name>', None, None, ['member_descriptor']], 'winerror': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'ImportError': ['<name>', {'msg': ['<name>', None, None, ['member_descriptor']], 'name': ['<name>', None, None, ['member_descriptor']], 'path': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'ImportWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'IndentationError': ['<name>', {}, ['args', 'kwargs'], [['SyntaxError']]], 'IndexError': ['<name>', {}, ['args', 'kwargs'], [['LookupError']]], 'InterruptedError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'IsADirectoryError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'KeyError': ['<name>', {}, ['args', 'kwargs'], [['LookupError']]], 'KeyboardInterrupt': ['<name>', {}, ['args', 'kwargs'], [['BaseException']]], 'LookupError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'MemoryError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'ModuleNotFoundError': ['<name>', {}, ['args', 'kwargs'], [['ImportError']]], 'NameError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'None': ['<name>', None, None, ['NoneType']], 'NotADirectoryError': ['NotADirectoryError', {}, ['args', 'kwargs'], [['OSError']]], 'NotImplemented': ['<name>', None, None, ['NotImplementedType']], 'NotImplementedError': ['<name>', {}, ['args', 'kwargs'], [['RuntimeError']]], 'OSError': ['<name>', {'characters_written': ['<name>', None, None, ['getset_descriptor']], 'errno': ['número_de_error', None, None, ['member_descriptor']], 'filename': ['<name>', None, None, ['member_descriptor']], 'filename2': ['<name>', None, None, ['member_descriptor']], 'strerror': ['<name>', None, None, ['member_descriptor']], 'winerror': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'OverflowError': ['<name>', {}, ['args', 'kwargs'], [['ArithmeticError']]], 'PendingDeprecationWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'PermissionError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'ProcessLookupError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'RecursionError': ['<name>', {}, ['args', 'kwargs'], [['RuntimeError']]], 'ReferenceError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'ResourceWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'RuntimeError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'RuntimeWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'StopAsyncIteration': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'StopIteration': ['<name>', {'value': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'SyntaxError': ['<name>', {'filename': ['<name>', None, None, ['member_descriptor']], 'lineno': ['<name>', None, None, ['member_descriptor']], 'msg': ['<name>', None, None, ['member_descriptor']], 'offset': ['<name>', None, None, ['member_descriptor']], 'print_file_and_line': ['<name>', None, None, ['member_descriptor']], 'text': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'SyntaxWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'SystemError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'SystemExit': ['<name>', {'code': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['BaseException']]], 'TabError': ['<name>', {}, ['args', 'kwargs'], [['IndentationError']]], 'TimeoutError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'True': ['Verdadero', None, None, ['bool']], 'TypeError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'UnboundLocalError': ['<name>', {}, ['args', 'kwargs'], [['NameError']]], 'UnicodeDecodeError': ['<name>', {'encoding': ['<name>', None, None, ['member_descriptor']], 'end': ['<name>', None, None, ['member_descriptor']], 'object': ['<name>', None, None, ['member_descriptor']], 'reason': ['<name>', None, None, ['member_descriptor']], 'start': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['UnicodeError']]], 'UnicodeEncodeError': ['<name>', {'encoding': ['<name>', None, None, ['member_descriptor']], 'end': ['<name>', None, None, ['member_descriptor']], 'object': ['<name>', None, None, ['member_descriptor']], 'reason': ['<name>', None, None, ['member_descriptor']], 'start': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['UnicodeError']]], 'UnicodeError': ['<name>', {}, ['args', 'kwargs'], [['ValueError']]], 'UnicodeTranslateError': ['<name>', {'encoding': ['<name>', None, None, ['member_descriptor']], 'end': ['<name>', None, None, ['member_descriptor']], 'object': ['<name>', None, None, ['member_descriptor']], 'reason': ['<name>', None, None, ['member_descriptor']], 'start': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['UnicodeError']]], 'UnicodeWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'UserWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'ValueError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'Warning': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'WindowsError': ['<name>', {'characters_written': ['<name>', None, None, ['getset_descriptor']], 'errno': ['número_de_error', None, None, ['member_descriptor']], 'filename': ['<name>', None, None, ['member_descriptor']], 'filename2': ['<name>', None, None, ['member_descriptor']], 'strerror': ['<name>', None, None, ['member_descriptor']], 'winerror': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'ZeroDivisionError': ['<name>', {}, ['args', 'kwargs'], [['ArithmeticError']]], 'abs': ['<name>', None, ['x']], 'all': ['<name>', None, ['iterable']], 'any': ['<name>', None, ['iterable']], 'ascii': ['<name>', None, ['obj']], 'bin': ['<name>', None, ['number']], 'bool': ['<name>', {}, ['args', 'kwargs'], [['int']]], 'breakpoint': ['<name>', None, []], 'bytearray': ['<name>', {'append': ['<name>', None, ['self', 'item']], 'capitalize': ['<name>', None, []], 'center': ['<name>', None, ['self', 'width', 'fillchar']], 'clear': ['<name>', None, ['self']], 'copy': ['<name>', None, ['self']], 'count': ['<name>', None, []], 'decode': ['<name>', None, ['self', 'encoding', 'errors']], 'endswith': ['<name>', None, []], 'expandtabs': ['<name>', None, ['self', 'tabsize']], 'extend': ['<name>', None, ['self', 'iterable_of_ints']], 'find': ['<name>', None, []], 'fromhex': ['<name>', None, ['string']], 'hex': ['<name>', None, []], 'index': ['<name>', None, []], 'insert': ['<name>', None, ['self', 'index', 'item']], 'isalnum': ['<name>', None, []], 'isalpha': ['<name>', None, []], 'isascii': ['<name>', None, []], 'isdigit': ['<name>', None, []], 'islower': ['<name>', None, []], 'isspace': ['<name>', None, []], 'istitle': ['<name>', None, []], 'isupper': ['<name>', None, []], 'join': ['<name>', None, ['self', 'iterable_of_bytes']], 'ljust': ['<name>', None, ['self', 'width', 'fillchar']], 'lower': ['<name>', None, []], 'lstrip': ['<name>', None, ['self', 'bytes']], 'maketrans': ['<name>', None, ['frm', 'to']], 'partition': ['<name>', None, ['self', 'sep']], 'pop': ['<name>', None, ['self', 'index']], 'remove': ['<name>', None, ['self', 'value']], 'removeprefix': ['<name>', None, ['self', 'prefix']], 'removesuffix': ['<name>', None, ['self', 'suffix']], 'replace': ['<name>', None, ['self', 'old', 'new', 'count']], 'reverse': ['<name>', None, ['self']], 'rfind': ['<name>', None, []], 'rindex': ['<name>', None, []], 'rjust': ['<name>', None, ['self', 'width', 'fillchar']], 'rpartition': ['<name>', None, ['self', 'sep']], 'rsplit': ['<name>', None, ['self', 'sep', 'maxsplit']], 'rstrip': ['<name>', None, ['self', 'bytes']], 'split': ['<name>', None, ['self', 'sep', 'maxsplit']], 'splitlines': ['<name>', None, ['self', 'keepends']], 'startswith': ['<name>', None, []], 'strip': ['<name>', None, ['self', 'bytes']], 'swapcase': ['<name>', None, []], 'title': ['<name>', None, []], 'translate': ['<name>', None, ['self', 'table', 'delete']], 'upper': ['<name>', None, []], 'zfill': ['<name>', None, ['self', 'width']]}, ['args', 'kwargs'], [['object']]], 'bytes': ['<name>', {'capitalize': ['<name>', None, []], 'center': ['<name>', None, ['self', 'width', 'fillchar']], 'count': ['<name>', None, []], 'decode': ['<name>', None, ['self', 'encoding', 'errors']], 'endswith': ['<name>', None, []], 'expandtabs': ['<name>', None, ['self', 'tabsize']], 'find': ['<name>', None, []], 'fromhex': ['<name>', None, ['string']], 'hex': ['<name>', None, []], 'index': ['<name>', None, []], 'isalnum': ['<name>', None, []], 'isalpha': ['<name>', None, []], 'isascii': ['<name>', None, []], 'isdigit': ['<name>', None, []], 'islower': ['<name>', None, []], 'isspace': ['<name>', None, []], 'istitle': ['<name>', None, []], 'isupper': ['<name>', None, []], 'join': ['<name>', None, ['self', 'iterable_of_bytes']], 'ljust': ['<name>', None, ['self', 'width', 'fillchar']], 'lower': ['<name>', None, []], 'lstrip': ['<name>', None, ['self', 'bytes']], 'maketrans': ['<name>', None, ['frm', 'to']], 'partition': ['<name>', None, ['self', 'sep']], 'removeprefix': ['<name>', None, ['self', 'prefix']], 'removesuffix': ['<name>', None, ['self', 'suffix']], 'replace': ['<name>', None, ['self', 'old', 'new', 'count']], 'rfind': ['<name>', None, []], 'rindex': ['<name>', None, []], 'rjust': ['<name>', None, ['self', 'width', 'fillchar']], 'rpartition': ['<name>', None, ['self', 'sep']], 'rsplit': ['<name>', None, ['self', 'sep', 'maxsplit']], 'rstrip': ['<name>', None, ['self', 'bytes']], 'split': ['<name>', None, ['self', 'sep', 'maxsplit']], 'splitlines': ['<name>', None, ['self', 'keepends']], 'startswith': ['<name>', None, []], 'strip': ['<name>', None, ['self', 'bytes']], 'swapcase': ['<name>', None, []], 'title': ['<name>', None, []], 'translate': ['<name>', None, ['self', 'table', 'delete']], 'upper': ['<name>', None, []], 'zfill': ['<name>', None, ['self', 'width']]}, ['args', 'kwargs'], [['object']]], 'callable': ['<name>', None, ['obj']], 'chr': ['<name>', None, ['i']], 'classmethod': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'compile': ['<name>', None, ['source', 'filename', 'mode', 'flags', 'dont_inherit', 'optimize', '_feature_version']], 'complex': ['<name>', {'conjugate': ['<name>', None, []], 'imag': ['<name>', None, None, ['member_descriptor']], 'real': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['object']]], 'copyright': ['<name>', None, []], 'credits': ['<name>', None, []], 'delattr': ['<name>', None, ['obj', 'name']], 'dict': ['<name>', {'clear': ['<name>', None, []], 'copy': ['<name>', None, []], 'fromkeys': ['<name>', None, ['iterable', 'value']], 'get': ['<name>', None, ['self', 'key', 'default']], 'items': ['<name>', None, []], 'keys': ['<name>', None, []], 'pop': ['<name>', None, []], 'popitem': ['<name>', None, ['self']], 'setdefault': ['<name>', None, ['self', 'key', 'default']], 'update': ['<name>', None, []], 'values': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'dir': ['<name>', None, []], 'divmod': ['<name>', None, ['x', 'y']], 'enumerate': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'eval': ['<name>', None, ['source', 'globals', 'locals']], 'exec': ['<name>', None, ['source', 'globals', 'locals']], 'exit': ['<name>', None, ['code']], 'filter': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'float': ['<name>', {'as_integer_ratio': ['<name>', None, ['self']], 'conjugate': ['<name>', None, ['self']], 'fromhex': ['<name>', None, ['string']], 'hex': ['<name>', None, ['self']], 'imag': ['<name>', None, None, ['getset_descriptor']], 'is_integer': ['<name>', None, ['self']], 'real': ['<name>', None, None, ['getset_descriptor']]}, ['args', 'kwargs'], [['object']]], 'format': ['<name>', None, ['value', 'format_spec']], 'frozenset': ['<name>', {'copy': ['<name>', None, []], 'difference': ['<name>', None, []], 'intersection': ['<name>', None, []], 'isdisjoint': ['<name>', None, []], 'issubset': ['<name>', None, []], 'issuperset': ['<name>', None, []], 'symmetric_difference': ['<name>', None, []], 'union': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'getattr': ['<name>', None, []], 'globals': ['<name>', None, []], 'hasattr': ['<name>', None, ['obj', 'name']], 'hash': ['<name>', None, ['obj']], 'help': ['<name>', None, ['args', 'kwds']], 'hex': ['<name>', None, ['number']], 'id': ['<name>', None, ['obj']], 'input': ['preguntar', None, ['prompt'], [['str']]], 'int': ['entero', {'as_integer_ratio': ['<name>', None, ['self']], 'bit_length': ['<name>', None, ['self']], 'conjugate': ['<name>', None, []], 'denominator': ['<name>', None, None, ['getset_descriptor']], 'from_bytes': ['<name>', None, ['bytes', 'byteorder', 'signed']], 'imag': ['parte_imaginario', None, None, ['getset_descriptor']], 'numerator': ['<name>', None, None, ['getset_descriptor']], 'real': ['parte_real', None, None, ['getset_descriptor']], 'to_bytes': ['<name>', None, ['self', 'length', 'byteorder', 'signed']]}, ['args', 'kwargs'], [['object']]], 'isinstance': ['<name>', None, ['obj', 'class_or_tuple']], 'issubclass': ['<name>', None, ['cls', 'class_or_tuple']], 'iter': ['<name>', None, []], 'len': ['<name>', None, ['obj']], 'license': ['<name>', None, []], 'list': ['listo', {'append': ['<name>', None, ['self', 'object']], 'clear': ['<name>', None, ['self']], 'copy': ['<name>', None, ['self']], 'count': ['<name>', None, ['self', 'value']], 'extend': ['<name>', None, ['self', 'iterable']], 'index': ['<name>', None, ['self', 'value', 'start', 'stop']], 'insert': ['<name>', None, ['self', 'index', 'object']], 'pop': ['<name>', None, ['self', 'index']], 'remove': ['<name>', None, ['self', 'value']], 'reverse': ['<name>', None, ['self']], 'sort': ['<name>', None, ['self', 'key', 'reverse']]}, ['args', 'kwargs'], [['object']]], 'locals': ['<name>', None, []], 'map': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'max': ['<name>', None, []], 'memoryview': ['<name>', {'c_contiguous': ['<name>', None, None, ['getset_descriptor']], 'cast': ['<name>', None, ['self', 'format', 'shape']], 'contiguous': ['<name>', None, None, ['getset_descriptor']], 'f_contiguous': ['<name>', None, None, ['getset_descriptor']], 'format': ['<name>', None, None, ['getset_descriptor']], 'hex': ['<name>', None, []], 'itemsize': ['<name>', None, None, ['getset_descriptor']], 'nbytes': ['<name>', None, None, ['getset_descriptor']], 'ndim': ['<name>', None, None, ['getset_descriptor']], 'obj': ['<name>', None, None, ['getset_descriptor']], 'readonly': ['<name>', None, None, ['getset_descriptor']], 'release': ['<name>', None, ['self']], 'shape': ['<name>', None, None, ['getset_descriptor']], 'strides': ['<name>', None, None, ['getset_descriptor']], 'suboffsets': ['<name>', None, None, ['getset_descriptor']], 'tobytes': ['<name>', None, ['self', 'order']], 'tolist': ['<name>', None, ['self']], 'toreadonly': ['<name>', None, ['self']]}, ['args', 'kwargs'], [['object']]], 'min': ['<name>', None, []], 'next': ['<name>', None, []], 'object': ['<name>', {}, ['args', 'kwargs'], []], 'oct': ['<name>', None, ['number']], 'open': ['<name>', None, ['file', 'mode', 'buffering', 'encoding', 'errors', 'newline', 'closefd', 'opener']], 'ord': ['<name>', None, ['c']], 'pow': ['<name>', None, ['base', 'exp', 'mod']], 'print': ['escribir', None, []], 'property': ['<name>', {'deleter': ['<name>', None, []], 'fdel': ['<name>', None, None, ['member_descriptor']], 'fget': ['<name>', None, None, ['member_descriptor']], 'fset': ['<name>', None, None, ['member_descriptor']], 'getter': ['<name>', None, []], 'setter': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'quit': ['<name>', None, ['code']], 'range': ['<name>', {'count': ['<name>', None, []], 'index': ['<name>', None, []], 'start': ['<name>', None, None, ['member_descriptor']], 'step': ['<name>', None, None, ['member_descriptor']], 'stop': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['object']]], 'repr': ['<name>', None, ['obj']], 'reversed': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'round': ['<name>', None, ['number', 'ndigits']], 'set': ['<name>', {'add': ['<name>', None, []], 'clear': ['<name>', None, []], 'copy': ['<name>', None, []], 'difference': ['<name>', None, []], 'difference_update': ['<name>', None, []], 'discard': ['<name>', None, []], 'intersection': ['<name>', None, []], 'intersection_update': ['<name>', None, []], 'isdisjoint': ['<name>', None, []], 'issubset': ['<name>', None, []], 'issuperset': ['<name>', None, []], 'pop': ['<name>', None, []], 'remove': ['<name>', None, []], 'symmetric_difference': ['<name>', None, []], 'symmetric_difference_update': ['<name>', None, []], 'union': ['<name>', None, []], 'update': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'setattr': ['<name>', None, ['obj', 'name', 'value']], 'slice': ['<name>', {'indices': ['<name>', None, []], 'start': ['<name>', None, None, ['member_descriptor']], 'step': ['<name>', None, None, ['member_descriptor']], 'stop': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['object']]], 'sorted': ['<name>', None, ['iterable', 'key', 'reverse']], 'staticmethod': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'str': ['texto', {'capitalize': ['<name>', None, ['self']], 'casefold': ['<name>', None, ['self']], 'center': ['<name>', None, ['self', 'width', 'fillchar']], 'count': ['<name>', None, []], 'encode': ['<name>', None, ['self', 'encoding', 'errors']], 'endswith': ['<name>', None, []], 'expandtabs': ['<name>', None, ['self', 'tabsize']], 'find': ['<name>', None, []], 'format': ['<name>', None, []], 'format_map': ['<name>', None, []], 'index': ['<name>', None, []], 'isalnum': ['<name>', None, ['self']], 'isalpha': ['<name>', None, ['self']], 'isascii': ['<name>', None, ['self']], 'isdecimal': ['<name>', None, ['self']], 'isdigit': ['<name>', None, ['self']], 'isidentifier': ['<name>', None, ['self']], 'islower': ['<name>', None, ['self']], 'isnumeric': ['<name>', None, ['self']], 'isprintable': ['<name>', None, ['self']], 'isspace': ['<name>', None, ['self']], 'istitle': ['<name>', None, ['self']], 'isupper': ['<name>', None, ['self']], 'join': ['unir', None, ['self', 'iterable']], 'ljust': ['<name>', None, ['self', 'width', 'fillchar']], 'lower': ['<name>', None, ['self']], 'lstrip': ['<name>', None, ['self', 'chars']], 'maketrans': ['<name>', None, []], 'partition': ['<name>', None, ['self', 'sep']], 'removeprefix': ['<name>', None, ['self', 'prefix']], 'removesuffix': ['<name>', None, ['self', 'suffix']], 'replace': ['<name>', None, ['self', 'old', 'new', 'count']], 'rfind': ['<name>', None, []], 'rindex': ['<name>', None, []], 'rjust': ['<name>', None, ['self', 'width', 'fillchar']], 'rpartition': ['<name>', None, ['self', 'sep']], 'rsplit': ['<name>', None, ['self', 'sep', 'maxsplit']], 'rstrip': ['<name>', None, ['self', 'chars']], 'split': ['<name>', None, ['self', 'sep', 'maxsplit']], 'splitlines': ['<name>', None, ['self', 'keepends']], 'startswith': ['<name>', None, []], 'strip': ['<name>', None, ['self', 'chars']], 'swapcase': ['<name>', None, ['self']], 'title': ['<name>', None, ['self']], 'translate': ['<name>', None, ['self', 'table']], 'upper': ['mayúsculo', None, ['self']], 'zfill': ['<name>', None, ['self', 'width']]}, ['args', 'kwargs'], [['object']]], 'sum': ['<name>', None, ['iterable', 'start']], 'super': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'tuple': ['<name>', {'count': ['<name>', None, ['self', 'value']], 'index': ['<name>', None, ['self', 'value', 'start', 'stop']]}, ['args', 'kwargs'], [['object']]], 'type': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'vars': ['<name>', None, []], 'zip': ['<name>', {}, ['args', 'kwargs'], [['object']]]}], ('Pushed', {'nombre': ('nombre', {}, None, [['str']]), 'frase_para_escribir': ('frase_para_escribir', {}, None, [['int'], ['float']])}, None, []), ('Pushed', {}, None, [])])
    frase_para_escribir = nombre + ", Tienes un"
    def escribir_letra ( letra ) : # Scope([['', {'ArithmeticError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'AssertionError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'AttributeError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'BaseException': ['<name>', {'args': ['<name>', None, None, ['getset_descriptor']], 'with_traceback': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'BlockingIOError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'BrokenPipeError': ['<name>', {}, ['args', 'kwargs'], [['ConnectionError']]], 'BufferError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'BytesWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'ChildProcessError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'ConnectionAbortedError': ['<name>', {}, ['args', 'kwargs'], [['ConnectionError']]], 'ConnectionError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'ConnectionRefusedError': ['<name>', {}, ['args', 'kwargs'], [['ConnectionError']]], 'ConnectionResetError': ['<name>', {}, ['args', 'kwargs'], [['ConnectionError']]], 'DeprecationWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'EOFError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'Ellipsis': ['<name>', None, None, ['ellipsis']], 'EnvironmentError': ['<name>', {'characters_written': ['<name>', None, None, ['getset_descriptor']], 'errno': ['número_de_error', None, None, ['member_descriptor']], 'filename': ['<name>', None, None, ['member_descriptor']], 'filename2': ['<name>', None, None, ['member_descriptor']], 'strerror': ['<name>', None, None, ['member_descriptor']], 'winerror': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'Exception': ['<name>', {}, ['args', 'kwargs'], [['BaseException']]], 'False': ['Falso', None, None, ['bool']], 'FileExistsError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'FileNotFoundError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'FloatingPointError': ['<name>', {}, ['args', 'kwargs'], [['ArithmeticError']]], 'FutureWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'GeneratorExit': ['<name>', {}, ['args', 'kwargs'], [['BaseException']]], 'IOError': ['<name>', {'characters_written': ['<name>', None, None, ['getset_descriptor']], 'errno': ['número_de_error', None, None, ['member_descriptor']], 'filename': ['<name>', None, None, ['member_descriptor']], 'filename2': ['<name>', None, None, ['member_descriptor']], 'strerror': ['<name>', None, None, ['member_descriptor']], 'winerror': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'ImportError': ['<name>', {'msg': ['<name>', None, None, ['member_descriptor']], 'name': ['<name>', None, None, ['member_descriptor']], 'path': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'ImportWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'IndentationError': ['<name>', {}, ['args', 'kwargs'], [['SyntaxError']]], 'IndexError': ['<name>', {}, ['args', 'kwargs'], [['LookupError']]], 'InterruptedError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'IsADirectoryError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'KeyError': ['<name>', {}, ['args', 'kwargs'], [['LookupError']]], 'KeyboardInterrupt': ['<name>', {}, ['args', 'kwargs'], [['BaseException']]], 'LookupError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'MemoryError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'ModuleNotFoundError': ['<name>', {}, ['args', 'kwargs'], [['ImportError']]], 'NameError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'None': ['<name>', None, None, ['NoneType']], 'NotADirectoryError': ['NotADirectoryError', {}, ['args', 'kwargs'], [['OSError']]], 'NotImplemented': ['<name>', None, None, ['NotImplementedType']], 'NotImplementedError': ['<name>', {}, ['args', 'kwargs'], [['RuntimeError']]], 'OSError': ['<name>', {'characters_written': ['<name>', None, None, ['getset_descriptor']], 'errno': ['número_de_error', None, None, ['member_descriptor']], 'filename': ['<name>', None, None, ['member_descriptor']], 'filename2': ['<name>', None, None, ['member_descriptor']], 'strerror': ['<name>', None, None, ['member_descriptor']], 'winerror': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'OverflowError': ['<name>', {}, ['args', 'kwargs'], [['ArithmeticError']]], 'PendingDeprecationWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'PermissionError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'ProcessLookupError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'RecursionError': ['<name>', {}, ['args', 'kwargs'], [['RuntimeError']]], 'ReferenceError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'ResourceWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'RuntimeError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'RuntimeWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'StopAsyncIteration': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'StopIteration': ['<name>', {'value': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'SyntaxError': ['<name>', {'filename': ['<name>', None, None, ['member_descriptor']], 'lineno': ['<name>', None, None, ['member_descriptor']], 'msg': ['<name>', None, None, ['member_descriptor']], 'offset': ['<name>', None, None, ['member_descriptor']], 'print_file_and_line': ['<name>', None, None, ['member_descriptor']], 'text': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'SyntaxWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'SystemError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'SystemExit': ['<name>', {'code': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['BaseException']]], 'TabError': ['<name>', {}, ['args', 'kwargs'], [['IndentationError']]], 'TimeoutError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'True': ['Verdadero', None, None, ['bool']], 'TypeError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'UnboundLocalError': ['<name>', {}, ['args', 'kwargs'], [['NameError']]], 'UnicodeDecodeError': ['<name>', {'encoding': ['<name>', None, None, ['member_descriptor']], 'end': ['<name>', None, None, ['member_descriptor']], 'object': ['<name>', None, None, ['member_descriptor']], 'reason': ['<name>', None, None, ['member_descriptor']], 'start': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['UnicodeError']]], 'UnicodeEncodeError': ['<name>', {'encoding': ['<name>', None, None, ['member_descriptor']], 'end': ['<name>', None, None, ['member_descriptor']], 'object': ['<name>', None, None, ['member_descriptor']], 'reason': ['<name>', None, None, ['member_descriptor']], 'start': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['UnicodeError']]], 'UnicodeError': ['<name>', {}, ['args', 'kwargs'], [['ValueError']]], 'UnicodeTranslateError': ['<name>', {'encoding': ['<name>', None, None, ['member_descriptor']], 'end': ['<name>', None, None, ['member_descriptor']], 'object': ['<name>', None, None, ['member_descriptor']], 'reason': ['<name>', None, None, ['member_descriptor']], 'start': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['UnicodeError']]], 'UnicodeWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'UserWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'ValueError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'Warning': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'WindowsError': ['<name>', {'characters_written': ['<name>', None, None, ['getset_descriptor']], 'errno': ['número_de_error', None, None, ['member_descriptor']], 'filename': ['<name>', None, None, ['member_descriptor']], 'filename2': ['<name>', None, None, ['member_descriptor']], 'strerror': ['<name>', None, None, ['member_descriptor']], 'winerror': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'ZeroDivisionError': ['<name>', {}, ['args', 'kwargs'], [['ArithmeticError']]], 'abs': ['<name>', None, ['x']], 'all': ['<name>', None, ['iterable']], 'any': ['<name>', None, ['iterable']], 'ascii': ['<name>', None, ['obj']], 'bin': ['<name>', None, ['number']], 'bool': ['<name>', {}, ['args', 'kwargs'], [['int']]], 'breakpoint': ['<name>', None, []], 'bytearray': ['<name>', {'append': ['<name>', None, ['self', 'item']], 'capitalize': ['<name>', None, []], 'center': ['<name>', None, ['self', 'width', 'fillchar']], 'clear': ['<name>', None, ['self']], 'copy': ['<name>', None, ['self']], 'count': ['<name>', None, []], 'decode': ['<name>', None, ['self', 'encoding', 'errors']], 'endswith': ['<name>', None, []], 'expandtabs': ['<name>', None, ['self', 'tabsize']], 'extend': ['<name>', None, ['self', 'iterable_of_ints']], 'find': ['<name>', None, []], 'fromhex': ['<name>', None, ['string']], 'hex': ['<name>', None, []], 'index': ['<name>', None, []], 'insert': ['<name>', None, ['self', 'index', 'item']], 'isalnum': ['<name>', None, []], 'isalpha': ['<name>', None, []], 'isascii': ['<name>', None, []], 'isdigit': ['<name>', None, []], 'islower': ['<name>', None, []], 'isspace': ['<name>', None, []], 'istitle': ['<name>', None, []], 'isupper': ['<name>', None, []], 'join': ['<name>', None, ['self', 'iterable_of_bytes']], 'ljust': ['<name>', None, ['self', 'width', 'fillchar']], 'lower': ['<name>', None, []], 'lstrip': ['<name>', None, ['self', 'bytes']], 'maketrans': ['<name>', None, ['frm', 'to']], 'partition': ['<name>', None, ['self', 'sep']], 'pop': ['<name>', None, ['self', 'index']], 'remove': ['<name>', None, ['self', 'value']], 'removeprefix': ['<name>', None, ['self', 'prefix']], 'removesuffix': ['<name>', None, ['self', 'suffix']], 'replace': ['<name>', None, ['self', 'old', 'new', 'count']], 'reverse': ['<name>', None, ['self']], 'rfind': ['<name>', None, []], 'rindex': ['<name>', None, []], 'rjust': ['<name>', None, ['self', 'width', 'fillchar']], 'rpartition': ['<name>', None, ['self', 'sep']], 'rsplit': ['<name>', None, ['self', 'sep', 'maxsplit']], 'rstrip': ['<name>', None, ['self', 'bytes']], 'split': ['<name>', None, ['self', 'sep', 'maxsplit']], 'splitlines': ['<name>', None, ['self', 'keepends']], 'startswith': ['<name>', None, []], 'strip': ['<name>', None, ['self', 'bytes']], 'swapcase': ['<name>', None, []], 'title': ['<name>', None, []], 'translate': ['<name>', None, ['self', 'table', 'delete']], 'upper': ['<name>', None, []], 'zfill': ['<name>', None, ['self', 'width']]}, ['args', 'kwargs'], [['object']]], 'bytes': ['<name>', {'capitalize': ['<name>', None, []], 'center': ['<name>', None, ['self', 'width', 'fillchar']], 'count': ['<name>', None, []], 'decode': ['<name>', None, ['self', 'encoding', 'errors']], 'endswith': ['<name>', None, []], 'expandtabs': ['<name>', None, ['self', 'tabsize']], 'find': ['<name>', None, []], 'fromhex': ['<name>', None, ['string']], 'hex': ['<name>', None, []], 'index': ['<name>', None, []], 'isalnum': ['<name>', None, []], 'isalpha': ['<name>', None, []], 'isascii': ['<name>', None, []], 'isdigit': ['<name>', None, []], 'islower': ['<name>', None, []], 'isspace': ['<name>', None, []], 'istitle': ['<name>', None, []], 'isupper': ['<name>', None, []], 'join': ['<name>', None, ['self', 'iterable_of_bytes']], 'ljust': ['<name>', None, ['self', 'width', 'fillchar']], 'lower': ['<name>', None, []], 'lstrip': ['<name>', None, ['self', 'bytes']], 'maketrans': ['<name>', None, ['frm', 'to']], 'partition': ['<name>', None, ['self', 'sep']], 'removeprefix': ['<name>', None, ['self', 'prefix']], 'removesuffix': ['<name>', None, ['self', 'suffix']], 'replace': ['<name>', None, ['self', 'old', 'new', 'count']], 'rfind': ['<name>', None, []], 'rindex': ['<name>', None, []], 'rjust': ['<name>', None, ['self', 'width', 'fillchar']], 'rpartition': ['<name>', None, ['self', 'sep']], 'rsplit': ['<name>', None, ['self', 'sep', 'maxsplit']], 'rstrip': ['<name>', None, ['self', 'bytes']], 'split': ['<name>', None, ['self', 'sep', 'maxsplit']], 'splitlines': ['<name>', None, ['self', 'keepends']], 'startswith': ['<name>', None, []], 'strip': ['<name>', None, ['self', 'bytes']], 'swapcase': ['<name>', None, []], 'title': ['<name>', None, []], 'translate': ['<name>', None, ['self', 'table', 'delete']], 'upper': ['<name>', None, []], 'zfill': ['<name>', None, ['self', 'width']]}, ['args', 'kwargs'], [['object']]], 'callable': ['<name>', None, ['obj']], 'chr': ['<name>', None, ['i']], 'classmethod': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'compile': ['<name>', None, ['source', 'filename', 'mode', 'flags', 'dont_inherit', 'optimize', '_feature_version']], 'complex': ['<name>', {'conjugate': ['<name>', None, []], 'imag': ['<name>', None, None, ['member_descriptor']], 'real': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['object']]], 'copyright': ['<name>', None, []], 'credits': ['<name>', None, []], 'delattr': ['<name>', None, ['obj', 'name']], 'dict': ['<name>', {'clear': ['<name>', None, []], 'copy': ['<name>', None, []], 'fromkeys': ['<name>', None, ['iterable', 'value']], 'get': ['<name>', None, ['self', 'key', 'default']], 'items': ['<name>', None, []], 'keys': ['<name>', None, []], 'pop': ['<name>', None, []], 'popitem': ['<name>', None, ['self']], 'setdefault': ['<name>', None, ['self', 'key', 'default']], 'update': ['<name>', None, []], 'values': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'dir': ['<name>', None, []], 'divmod': ['<name>', None, ['x', 'y']], 'enumerate': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'eval': ['<name>', None, ['source', 'globals', 'locals']], 'exec': ['<name>', None, ['source', 'globals', 'locals']], 'exit': ['<name>', None, ['code']], 'filter': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'float': ['<name>', {'as_integer_ratio': ['<name>', None, ['self']], 'conjugate': ['<name>', None, ['self']], 'fromhex': ['<name>', None, ['string']], 'hex': ['<name>', None, ['self']], 'imag': ['<name>', None, None, ['getset_descriptor']], 'is_integer': ['<name>', None, ['self']], 'real': ['<name>', None, None, ['getset_descriptor']]}, ['args', 'kwargs'], [['object']]], 'format': ['<name>', None, ['value', 'format_spec']], 'frozenset': ['<name>', {'copy': ['<name>', None, []], 'difference': ['<name>', None, []], 'intersection': ['<name>', None, []], 'isdisjoint': ['<name>', None, []], 'issubset': ['<name>', None, []], 'issuperset': ['<name>', None, []], 'symmetric_difference': ['<name>', None, []], 'union': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'getattr': ['<name>', None, []], 'globals': ['<name>', None, []], 'hasattr': ['<name>', None, ['obj', 'name']], 'hash': ['<name>', None, ['obj']], 'help': ['<name>', None, ['args', 'kwds']], 'hex': ['<name>', None, ['number']], 'id': ['<name>', None, ['obj']], 'input': ['preguntar', None, ['prompt'], [['str']]], 'int': ['entero', {'as_integer_ratio': ['<name>', None, ['self']], 'bit_length': ['<name>', None, ['self']], 'conjugate': ['<name>', None, []], 'denominator': ['<name>', None, None, ['getset_descriptor']], 'from_bytes': ['<name>', None, ['bytes', 'byteorder', 'signed']], 'imag': ['parte_imaginario', None, None, ['getset_descriptor']], 'numerator': ['<name>', None, None, ['getset_descriptor']], 'real': ['parte_real', None, None, ['getset_descriptor']], 'to_bytes': ['<name>', None, ['self', 'length', 'byteorder', 'signed']]}, ['args', 'kwargs'], [['object']]], 'isinstance': ['<name>', None, ['obj', 'class_or_tuple']], 'issubclass': ['<name>', None, ['cls', 'class_or_tuple']], 'iter': ['<name>', None, []], 'len': ['<name>', None, ['obj']], 'license': ['<name>', None, []], 'list': ['listo', {'append': ['<name>', None, ['self', 'object']], 'clear': ['<name>', None, ['self']], 'copy': ['<name>', None, ['self']], 'count': ['<name>', None, ['self', 'value']], 'extend': ['<name>', None, ['self', 'iterable']], 'index': ['<name>', None, ['self', 'value', 'start', 'stop']], 'insert': ['<name>', None, ['self', 'index', 'object']], 'pop': ['<name>', None, ['self', 'index']], 'remove': ['<name>', None, ['self', 'value']], 'reverse': ['<name>', None, ['self']], 'sort': ['<name>', None, ['self', 'key', 'reverse']]}, ['args', 'kwargs'], [['object']]], 'locals': ['<name>', None, []], 'map': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'max': ['<name>', None, []], 'memoryview': ['<name>', {'c_contiguous': ['<name>', None, None, ['getset_descriptor']], 'cast': ['<name>', None, ['self', 'format', 'shape']], 'contiguous': ['<name>', None, None, ['getset_descriptor']], 'f_contiguous': ['<name>', None, None, ['getset_descriptor']], 'format': ['<name>', None, None, ['getset_descriptor']], 'hex': ['<name>', None, []], 'itemsize': ['<name>', None, None, ['getset_descriptor']], 'nbytes': ['<name>', None, None, ['getset_descriptor']], 'ndim': ['<name>', None, None, ['getset_descriptor']], 'obj': ['<name>', None, None, ['getset_descriptor']], 'readonly': ['<name>', None, None, ['getset_descriptor']], 'release': ['<name>', None, ['self']], 'shape': ['<name>', None, None, ['getset_descriptor']], 'strides': ['<name>', None, None, ['getset_descriptor']], 'suboffsets': ['<name>', None, None, ['getset_descriptor']], 'tobytes': ['<name>', None, ['self', 'order']], 'tolist': ['<name>', None, ['self']], 'toreadonly': ['<name>', None, ['self']]}, ['args', 'kwargs'], [['object']]], 'min': ['<name>', None, []], 'next': ['<name>', None, []], 'object': ['<name>', {}, ['args', 'kwargs'], []], 'oct': ['<name>', None, ['number']], 'open': ['<name>', None, ['file', 'mode', 'buffering', 'encoding', 'errors', 'newline', 'closefd', 'opener']], 'ord': ['<name>', None, ['c']], 'pow': ['<name>', None, ['base', 'exp', 'mod']], 'print': ['escribir', None, []], 'property': ['<name>', {'deleter': ['<name>', None, []], 'fdel': ['<name>', None, None, ['member_descriptor']], 'fget': ['<name>', None, None, ['member_descriptor']], 'fset': ['<name>', None, None, ['member_descriptor']], 'getter': ['<name>', None, []], 'setter': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'quit': ['<name>', None, ['code']], 'range': ['<name>', {'count': ['<name>', None, []], 'index': ['<name>', None, []], 'start': ['<name>', None, None, ['member_descriptor']], 'step': ['<name>', None, None, ['member_descriptor']], 'stop': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['object']]], 'repr': ['<name>', None, ['obj']], 'reversed': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'round': ['<name>', None, ['number', 'ndigits']], 'set': ['<name>', {'add': ['<name>', None, []], 'clear': ['<name>', None, []], 'copy': ['<name>', None, []], 'difference': ['<name>', None, []], 'difference_update': ['<name>', None, []], 'discard': ['<name>', None, []], 'intersection': ['<name>', None, []], 'intersection_update': ['<name>', None, []], 'isdisjoint': ['<name>', None, []], 'issubset': ['<name>', None, []], 'issuperset': ['<name>', None, []], 'pop': ['<name>', None, []], 'remove': ['<name>', None, []], 'symmetric_difference': ['<name>', None, []], 'symmetric_difference_update': ['<name>', None, []], 'union': ['<name>', None, []], 'update': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'setattr': ['<name>', None, ['obj', 'name', 'value']], 'slice': ['<name>', {'indices': ['<name>', None, []], 'start': ['<name>', None, None, ['member_descriptor']], 'step': ['<name>', None, None, ['member_descriptor']], 'stop': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['object']]], 'sorted': ['<name>', None, ['iterable', 'key', 'reverse']], 'staticmethod': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'str': ['texto', {'capitalize': ['<name>', None, ['self']], 'casefold': ['<name>', None, ['self']], 'center': ['<name>', None, ['self', 'width', 'fillchar']], 'count': ['<name>', None, []], 'encode': ['<name>', None, ['self', 'encoding', 'errors']], 'endswith': ['<name>', None, []], 'expandtabs': ['<name>', None, ['self', 'tabsize']], 'find': ['<name>', None, []], 'format': ['<name>', None, []], 'format_map': ['<name>', None, []], 'index': ['<name>', None, []], 'isalnum': ['<name>', None, ['self']], 'isalpha': ['<name>', None, ['self']], 'isascii': ['<name>', None, ['self']], 'isdecimal': ['<name>', None, ['self']], 'isdigit': ['<name>', None, ['self']], 'isidentifier': ['<name>', None, ['self']], 'islower': ['<name>', None, ['self']], 'isnumeric': ['<name>', None, ['self']], 'isprintable': ['<name>', None, ['self']], 'isspace': ['<name>', None, ['self']], 'istitle': ['<name>', None, ['self']], 'isupper': ['<name>', None, ['self']], 'join': ['unir', None, ['self', 'iterable']], 'ljust': ['<name>', None, ['self', 'width', 'fillchar']], 'lower': ['<name>', None, ['self']], 'lstrip': ['<name>', None, ['self', 'chars']], 'maketrans': ['<name>', None, []], 'partition': ['<name>', None, ['self', 'sep']], 'removeprefix': ['<name>', None, ['self', 'prefix']], 'removesuffix': ['<name>', None, ['self', 'suffix']], 'replace': ['<name>', None, ['self', 'old', 'new', 'count']], 'rfind': ['<name>', None, []], 'rindex': ['<name>', None, []], 'rjust': ['<name>', None, ['self', 'width', 'fillchar']], 'rpartition': ['<name>', None, ['self', 'sep']], 'rsplit': ['<name>', None, ['self', 'sep', 'maxsplit']], 'rstrip': ['<name>', None, ['self', 'chars']], 'split': ['<name>', None, ['self', 'sep', 'maxsplit']], 'splitlines': ['<name>', None, ['self', 'keepends']], 'startswith': ['<name>', None, []], 'strip': ['<name>', None, ['self', 'chars']], 'swapcase': ['<name>', None, ['self']], 'title': ['<name>', None, ['self']], 'translate': ['<name>', None, ['self', 'table']], 'upper': ['mayúsculo', None, ['self']], 'zfill': ['<name>', None, ['self', 'width']]}, ['args', 'kwargs'], [['object']]], 'sum': ['<name>', None, ['iterable', 'start']], 'super': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'tuple': ['<name>', {'count': ['<name>', None, ['self', 'value']], 'index': ['<name>', None, ['self', 'value', 'start', 'stop']]}, ['args', 'kwargs'], [['object']]], 'type': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'vars': ['<name>', None, []], 'zip': ['<name>', {}, ['args', 'kwargs'], [['object']]]}], ('Pushed', {'nombre': ('nombre', {}, None, [['str']]), 'frase_para_escribir': ('frase_para_escribir', {}, None, [['int'], ['float']])}, None, []), ('Pushed', {'frase_para_escribir': ('frase_para_escribir', {}, None, [['nombre']])}, None, []), ('Pushed', {}, None, [])])
        print(frase_para_escribir.upper(),letra)
    
    def con_cada_letra ( palabra,func ) : # Scope([['', {'ArithmeticError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'AssertionError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'AttributeError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'BaseException': ['<name>', {'args': ['<name>', None, None, ['getset_descriptor']], 'with_traceback': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'BlockingIOError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'BrokenPipeError': ['<name>', {}, ['args', 'kwargs'], [['ConnectionError']]], 'BufferError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'BytesWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'ChildProcessError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'ConnectionAbortedError': ['<name>', {}, ['args', 'kwargs'], [['ConnectionError']]], 'ConnectionError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'ConnectionRefusedError': ['<name>', {}, ['args', 'kwargs'], [['ConnectionError']]], 'ConnectionResetError': ['<name>', {}, ['args', 'kwargs'], [['ConnectionError']]], 'DeprecationWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'EOFError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'Ellipsis': ['<name>', None, None, ['ellipsis']], 'EnvironmentError': ['<name>', {'characters_written': ['<name>', None, None, ['getset_descriptor']], 'errno': ['número_de_error', None, None, ['member_descriptor']], 'filename': ['<name>', None, None, ['member_descriptor']], 'filename2': ['<name>', None, None, ['member_descriptor']], 'strerror': ['<name>', None, None, ['member_descriptor']], 'winerror': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'Exception': ['<name>', {}, ['args', 'kwargs'], [['BaseException']]], 'False': ['Falso', None, None, ['bool']], 'FileExistsError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'FileNotFoundError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'FloatingPointError': ['<name>', {}, ['args', 'kwargs'], [['ArithmeticError']]], 'FutureWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'GeneratorExit': ['<name>', {}, ['args', 'kwargs'], [['BaseException']]], 'IOError': ['<name>', {'characters_written': ['<name>', None, None, ['getset_descriptor']], 'errno': ['número_de_error', None, None, ['member_descriptor']], 'filename': ['<name>', None, None, ['member_descriptor']], 'filename2': ['<name>', None, None, ['member_descriptor']], 'strerror': ['<name>', None, None, ['member_descriptor']], 'winerror': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'ImportError': ['<name>', {'msg': ['<name>', None, None, ['member_descriptor']], 'name': ['<name>', None, None, ['member_descriptor']], 'path': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'ImportWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'IndentationError': ['<name>', {}, ['args', 'kwargs'], [['SyntaxError']]], 'IndexError': ['<name>', {}, ['args', 'kwargs'], [['LookupError']]], 'InterruptedError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'IsADirectoryError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'KeyError': ['<name>', {}, ['args', 'kwargs'], [['LookupError']]], 'KeyboardInterrupt': ['<name>', {}, ['args', 'kwargs'], [['BaseException']]], 'LookupError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'MemoryError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'ModuleNotFoundError': ['<name>', {}, ['args', 'kwargs'], [['ImportError']]], 'NameError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'None': ['<name>', None, None, ['NoneType']], 'NotADirectoryError': ['NotADirectoryError', {}, ['args', 'kwargs'], [['OSError']]], 'NotImplemented': ['<name>', None, None, ['NotImplementedType']], 'NotImplementedError': ['<name>', {}, ['args', 'kwargs'], [['RuntimeError']]], 'OSError': ['<name>', {'characters_written': ['<name>', None, None, ['getset_descriptor']], 'errno': ['número_de_error', None, None, ['member_descriptor']], 'filename': ['<name>', None, None, ['member_descriptor']], 'filename2': ['<name>', None, None, ['member_descriptor']], 'strerror': ['<name>', None, None, ['member_descriptor']], 'winerror': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'OverflowError': ['<name>', {}, ['args', 'kwargs'], [['ArithmeticError']]], 'PendingDeprecationWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'PermissionError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'ProcessLookupError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'RecursionError': ['<name>', {}, ['args', 'kwargs'], [['RuntimeError']]], 'ReferenceError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'ResourceWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'RuntimeError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'RuntimeWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'StopAsyncIteration': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'StopIteration': ['<name>', {'value': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'SyntaxError': ['<name>', {'filename': ['<name>', None, None, ['member_descriptor']], 'lineno': ['<name>', None, None, ['member_descriptor']], 'msg': ['<name>', None, None, ['member_descriptor']], 'offset': ['<name>', None, None, ['member_descriptor']], 'print_file_and_line': ['<name>', None, None, ['member_descriptor']], 'text': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'SyntaxWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'SystemError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'SystemExit': ['<name>', {'code': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['BaseException']]], 'TabError': ['<name>', {}, ['args', 'kwargs'], [['IndentationError']]], 'TimeoutError': ['<name>', {}, ['args', 'kwargs'], [['OSError']]], 'True': ['Verdadero', None, None, ['bool']], 'TypeError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'UnboundLocalError': ['<name>', {}, ['args', 'kwargs'], [['NameError']]], 'UnicodeDecodeError': ['<name>', {'encoding': ['<name>', None, None, ['member_descriptor']], 'end': ['<name>', None, None, ['member_descriptor']], 'object': ['<name>', None, None, ['member_descriptor']], 'reason': ['<name>', None, None, ['member_descriptor']], 'start': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['UnicodeError']]], 'UnicodeEncodeError': ['<name>', {'encoding': ['<name>', None, None, ['member_descriptor']], 'end': ['<name>', None, None, ['member_descriptor']], 'object': ['<name>', None, None, ['member_descriptor']], 'reason': ['<name>', None, None, ['member_descriptor']], 'start': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['UnicodeError']]], 'UnicodeError': ['<name>', {}, ['args', 'kwargs'], [['ValueError']]], 'UnicodeTranslateError': ['<name>', {'encoding': ['<name>', None, None, ['member_descriptor']], 'end': ['<name>', None, None, ['member_descriptor']], 'object': ['<name>', None, None, ['member_descriptor']], 'reason': ['<name>', None, None, ['member_descriptor']], 'start': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['UnicodeError']]], 'UnicodeWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'UserWarning': ['<name>', {}, ['args', 'kwargs'], [['Warning']]], 'ValueError': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'Warning': ['<name>', {}, ['args', 'kwargs'], [['Exception']]], 'WindowsError': ['<name>', {'characters_written': ['<name>', None, None, ['getset_descriptor']], 'errno': ['número_de_error', None, None, ['member_descriptor']], 'filename': ['<name>', None, None, ['member_descriptor']], 'filename2': ['<name>', None, None, ['member_descriptor']], 'strerror': ['<name>', None, None, ['member_descriptor']], 'winerror': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['Exception']]], 'ZeroDivisionError': ['<name>', {}, ['args', 'kwargs'], [['ArithmeticError']]], 'abs': ['<name>', None, ['x']], 'all': ['<name>', None, ['iterable']], 'any': ['<name>', None, ['iterable']], 'ascii': ['<name>', None, ['obj']], 'bin': ['<name>', None, ['number']], 'bool': ['<name>', {}, ['args', 'kwargs'], [['int']]], 'breakpoint': ['<name>', None, []], 'bytearray': ['<name>', {'append': ['<name>', None, ['self', 'item']], 'capitalize': ['<name>', None, []], 'center': ['<name>', None, ['self', 'width', 'fillchar']], 'clear': ['<name>', None, ['self']], 'copy': ['<name>', None, ['self']], 'count': ['<name>', None, []], 'decode': ['<name>', None, ['self', 'encoding', 'errors']], 'endswith': ['<name>', None, []], 'expandtabs': ['<name>', None, ['self', 'tabsize']], 'extend': ['<name>', None, ['self', 'iterable_of_ints']], 'find': ['<name>', None, []], 'fromhex': ['<name>', None, ['string']], 'hex': ['<name>', None, []], 'index': ['<name>', None, []], 'insert': ['<name>', None, ['self', 'index', 'item']], 'isalnum': ['<name>', None, []], 'isalpha': ['<name>', None, []], 'isascii': ['<name>', None, []], 'isdigit': ['<name>', None, []], 'islower': ['<name>', None, []], 'isspace': ['<name>', None, []], 'istitle': ['<name>', None, []], 'isupper': ['<name>', None, []], 'join': ['<name>', None, ['self', 'iterable_of_bytes']], 'ljust': ['<name>', None, ['self', 'width', 'fillchar']], 'lower': ['<name>', None, []], 'lstrip': ['<name>', None, ['self', 'bytes']], 'maketrans': ['<name>', None, ['frm', 'to']], 'partition': ['<name>', None, ['self', 'sep']], 'pop': ['<name>', None, ['self', 'index']], 'remove': ['<name>', None, ['self', 'value']], 'removeprefix': ['<name>', None, ['self', 'prefix']], 'removesuffix': ['<name>', None, ['self', 'suffix']], 'replace': ['<name>', None, ['self', 'old', 'new', 'count']], 'reverse': ['<name>', None, ['self']], 'rfind': ['<name>', None, []], 'rindex': ['<name>', None, []], 'rjust': ['<name>', None, ['self', 'width', 'fillchar']], 'rpartition': ['<name>', None, ['self', 'sep']], 'rsplit': ['<name>', None, ['self', 'sep', 'maxsplit']], 'rstrip': ['<name>', None, ['self', 'bytes']], 'split': ['<name>', None, ['self', 'sep', 'maxsplit']], 'splitlines': ['<name>', None, ['self', 'keepends']], 'startswith': ['<name>', None, []], 'strip': ['<name>', None, ['self', 'bytes']], 'swapcase': ['<name>', None, []], 'title': ['<name>', None, []], 'translate': ['<name>', None, ['self', 'table', 'delete']], 'upper': ['<name>', None, []], 'zfill': ['<name>', None, ['self', 'width']]}, ['args', 'kwargs'], [['object']]], 'bytes': ['<name>', {'capitalize': ['<name>', None, []], 'center': ['<name>', None, ['self', 'width', 'fillchar']], 'count': ['<name>', None, []], 'decode': ['<name>', None, ['self', 'encoding', 'errors']], 'endswith': ['<name>', None, []], 'expandtabs': ['<name>', None, ['self', 'tabsize']], 'find': ['<name>', None, []], 'fromhex': ['<name>', None, ['string']], 'hex': ['<name>', None, []], 'index': ['<name>', None, []], 'isalnum': ['<name>', None, []], 'isalpha': ['<name>', None, []], 'isascii': ['<name>', None, []], 'isdigit': ['<name>', None, []], 'islower': ['<name>', None, []], 'isspace': ['<name>', None, []], 'istitle': ['<name>', None, []], 'isupper': ['<name>', None, []], 'join': ['<name>', None, ['self', 'iterable_of_bytes']], 'ljust': ['<name>', None, ['self', 'width', 'fillchar']], 'lower': ['<name>', None, []], 'lstrip': ['<name>', None, ['self', 'bytes']], 'maketrans': ['<name>', None, ['frm', 'to']], 'partition': ['<name>', None, ['self', 'sep']], 'removeprefix': ['<name>', None, ['self', 'prefix']], 'removesuffix': ['<name>', None, ['self', 'suffix']], 'replace': ['<name>', None, ['self', 'old', 'new', 'count']], 'rfind': ['<name>', None, []], 'rindex': ['<name>', None, []], 'rjust': ['<name>', None, ['self', 'width', 'fillchar']], 'rpartition': ['<name>', None, ['self', 'sep']], 'rsplit': ['<name>', None, ['self', 'sep', 'maxsplit']], 'rstrip': ['<name>', None, ['self', 'bytes']], 'split': ['<name>', None, ['self', 'sep', 'maxsplit']], 'splitlines': ['<name>', None, ['self', 'keepends']], 'startswith': ['<name>', None, []], 'strip': ['<name>', None, ['self', 'bytes']], 'swapcase': ['<name>', None, []], 'title': ['<name>', None, []], 'translate': ['<name>', None, ['self', 'table', 'delete']], 'upper': ['<name>', None, []], 'zfill': ['<name>', None, ['self', 'width']]}, ['args', 'kwargs'], [['object']]], 'callable': ['<name>', None, ['obj']], 'chr': ['<name>', None, ['i']], 'classmethod': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'compile': ['<name>', None, ['source', 'filename', 'mode', 'flags', 'dont_inherit', 'optimize', '_feature_version']], 'complex': ['<name>', {'conjugate': ['<name>', None, []], 'imag': ['<name>', None, None, ['member_descriptor']], 'real': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['object']]], 'copyright': ['<name>', None, []], 'credits': ['<name>', None, []], 'delattr': ['<name>', None, ['obj', 'name']], 'dict': ['<name>', {'clear': ['<name>', None, []], 'copy': ['<name>', None, []], 'fromkeys': ['<name>', None, ['iterable', 'value']], 'get': ['<name>', None, ['self', 'key', 'default']], 'items': ['<name>', None, []], 'keys': ['<name>', None, []], 'pop': ['<name>', None, []], 'popitem': ['<name>', None, ['self']], 'setdefault': ['<name>', None, ['self', 'key', 'default']], 'update': ['<name>', None, []], 'values': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'dir': ['<name>', None, []], 'divmod': ['<name>', None, ['x', 'y']], 'enumerate': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'eval': ['<name>', None, ['source', 'globals', 'locals']], 'exec': ['<name>', None, ['source', 'globals', 'locals']], 'exit': ['<name>', None, ['code']], 'filter': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'float': ['<name>', {'as_integer_ratio': ['<name>', None, ['self']], 'conjugate': ['<name>', None, ['self']], 'fromhex': ['<name>', None, ['string']], 'hex': ['<name>', None, ['self']], 'imag': ['<name>', None, None, ['getset_descriptor']], 'is_integer': ['<name>', None, ['self']], 'real': ['<name>', None, None, ['getset_descriptor']]}, ['args', 'kwargs'], [['object']]], 'format': ['<name>', None, ['value', 'format_spec']], 'frozenset': ['<name>', {'copy': ['<name>', None, []], 'difference': ['<name>', None, []], 'intersection': ['<name>', None, []], 'isdisjoint': ['<name>', None, []], 'issubset': ['<name>', None, []], 'issuperset': ['<name>', None, []], 'symmetric_difference': ['<name>', None, []], 'union': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'getattr': ['<name>', None, []], 'globals': ['<name>', None, []], 'hasattr': ['<name>', None, ['obj', 'name']], 'hash': ['<name>', None, ['obj']], 'help': ['<name>', None, ['args', 'kwds']], 'hex': ['<name>', None, ['number']], 'id': ['<name>', None, ['obj']], 'input': ['preguntar', None, ['prompt'], [['str']]], 'int': ['entero', {'as_integer_ratio': ['<name>', None, ['self']], 'bit_length': ['<name>', None, ['self']], 'conjugate': ['<name>', None, []], 'denominator': ['<name>', None, None, ['getset_descriptor']], 'from_bytes': ['<name>', None, ['bytes', 'byteorder', 'signed']], 'imag': ['parte_imaginario', None, None, ['getset_descriptor']], 'numerator': ['<name>', None, None, ['getset_descriptor']], 'real': ['parte_real', None, None, ['getset_descriptor']], 'to_bytes': ['<name>', None, ['self', 'length', 'byteorder', 'signed']]}, ['args', 'kwargs'], [['object']]], 'isinstance': ['<name>', None, ['obj', 'class_or_tuple']], 'issubclass': ['<name>', None, ['cls', 'class_or_tuple']], 'iter': ['<name>', None, []], 'len': ['<name>', None, ['obj']], 'license': ['<name>', None, []], 'list': ['listo', {'append': ['<name>', None, ['self', 'object']], 'clear': ['<name>', None, ['self']], 'copy': ['<name>', None, ['self']], 'count': ['<name>', None, ['self', 'value']], 'extend': ['<name>', None, ['self', 'iterable']], 'index': ['<name>', None, ['self', 'value', 'start', 'stop']], 'insert': ['<name>', None, ['self', 'index', 'object']], 'pop': ['<name>', None, ['self', 'index']], 'remove': ['<name>', None, ['self', 'value']], 'reverse': ['<name>', None, ['self']], 'sort': ['<name>', None, ['self', 'key', 'reverse']]}, ['args', 'kwargs'], [['object']]], 'locals': ['<name>', None, []], 'map': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'max': ['<name>', None, []], 'memoryview': ['<name>', {'c_contiguous': ['<name>', None, None, ['getset_descriptor']], 'cast': ['<name>', None, ['self', 'format', 'shape']], 'contiguous': ['<name>', None, None, ['getset_descriptor']], 'f_contiguous': ['<name>', None, None, ['getset_descriptor']], 'format': ['<name>', None, None, ['getset_descriptor']], 'hex': ['<name>', None, []], 'itemsize': ['<name>', None, None, ['getset_descriptor']], 'nbytes': ['<name>', None, None, ['getset_descriptor']], 'ndim': ['<name>', None, None, ['getset_descriptor']], 'obj': ['<name>', None, None, ['getset_descriptor']], 'readonly': ['<name>', None, None, ['getset_descriptor']], 'release': ['<name>', None, ['self']], 'shape': ['<name>', None, None, ['getset_descriptor']], 'strides': ['<name>', None, None, ['getset_descriptor']], 'suboffsets': ['<name>', None, None, ['getset_descriptor']], 'tobytes': ['<name>', None, ['self', 'order']], 'tolist': ['<name>', None, ['self']], 'toreadonly': ['<name>', None, ['self']]}, ['args', 'kwargs'], [['object']]], 'min': ['<name>', None, []], 'next': ['<name>', None, []], 'object': ['<name>', {}, ['args', 'kwargs'], []], 'oct': ['<name>', None, ['number']], 'open': ['<name>', None, ['file', 'mode', 'buffering', 'encoding', 'errors', 'newline', 'closefd', 'opener']], 'ord': ['<name>', None, ['c']], 'pow': ['<name>', None, ['base', 'exp', 'mod']], 'print': ['escribir', None, []], 'property': ['<name>', {'deleter': ['<name>', None, []], 'fdel': ['<name>', None, None, ['member_descriptor']], 'fget': ['<name>', None, None, ['member_descriptor']], 'fset': ['<name>', None, None, ['member_descriptor']], 'getter': ['<name>', None, []], 'setter': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'quit': ['<name>', None, ['code']], 'range': ['<name>', {'count': ['<name>', None, []], 'index': ['<name>', None, []], 'start': ['<name>', None, None, ['member_descriptor']], 'step': ['<name>', None, None, ['member_descriptor']], 'stop': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['object']]], 'repr': ['<name>', None, ['obj']], 'reversed': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'round': ['<name>', None, ['number', 'ndigits']], 'set': ['<name>', {'add': ['<name>', None, []], 'clear': ['<name>', None, []], 'copy': ['<name>', None, []], 'difference': ['<name>', None, []], 'difference_update': ['<name>', None, []], 'discard': ['<name>', None, []], 'intersection': ['<name>', None, []], 'intersection_update': ['<name>', None, []], 'isdisjoint': ['<name>', None, []], 'issubset': ['<name>', None, []], 'issuperset': ['<name>', None, []], 'pop': ['<name>', None, []], 'remove': ['<name>', None, []], 'symmetric_difference': ['<name>', None, []], 'symmetric_difference_update': ['<name>', None, []], 'union': ['<name>', None, []], 'update': ['<name>', None, []]}, ['args', 'kwargs'], [['object']]], 'setattr': ['<name>', None, ['obj', 'name', 'value']], 'slice': ['<name>', {'indices': ['<name>', None, []], 'start': ['<name>', None, None, ['member_descriptor']], 'step': ['<name>', None, None, ['member_descriptor']], 'stop': ['<name>', None, None, ['member_descriptor']]}, ['args', 'kwargs'], [['object']]], 'sorted': ['<name>', None, ['iterable', 'key', 'reverse']], 'staticmethod': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'str': ['texto', {'capitalize': ['<name>', None, ['self']], 'casefold': ['<name>', None, ['self']], 'center': ['<name>', None, ['self', 'width', 'fillchar']], 'count': ['<name>', None, []], 'encode': ['<name>', None, ['self', 'encoding', 'errors']], 'endswith': ['<name>', None, []], 'expandtabs': ['<name>', None, ['self', 'tabsize']], 'find': ['<name>', None, []], 'format': ['<name>', None, []], 'format_map': ['<name>', None, []], 'index': ['<name>', None, []], 'isalnum': ['<name>', None, ['self']], 'isalpha': ['<name>', None, ['self']], 'isascii': ['<name>', None, ['self']], 'isdecimal': ['<name>', None, ['self']], 'isdigit': ['<name>', None, ['self']], 'isidentifier': ['<name>', None, ['self']], 'islower': ['<name>', None, ['self']], 'isnumeric': ['<name>', None, ['self']], 'isprintable': ['<name>', None, ['self']], 'isspace': ['<name>', None, ['self']], 'istitle': ['<name>', None, ['self']], 'isupper': ['<name>', None, ['self']], 'join': ['unir', None, ['self', 'iterable']], 'ljust': ['<name>', None, ['self', 'width', 'fillchar']], 'lower': ['<name>', None, ['self']], 'lstrip': ['<name>', None, ['self', 'chars']], 'maketrans': ['<name>', None, []], 'partition': ['<name>', None, ['self', 'sep']], 'removeprefix': ['<name>', None, ['self', 'prefix']], 'removesuffix': ['<name>', None, ['self', 'suffix']], 'replace': ['<name>', None, ['self', 'old', 'new', 'count']], 'rfind': ['<name>', None, []], 'rindex': ['<name>', None, []], 'rjust': ['<name>', None, ['self', 'width', 'fillchar']], 'rpartition': ['<name>', None, ['self', 'sep']], 'rsplit': ['<name>', None, ['self', 'sep', 'maxsplit']], 'rstrip': ['<name>', None, ['self', 'chars']], 'split': ['<name>', None, ['self', 'sep', 'maxsplit']], 'splitlines': ['<name>', None, ['self', 'keepends']], 'startswith': ['<name>', None, []], 'strip': ['<name>', None, ['self', 'chars']], 'swapcase': ['<name>', None, ['self']], 'title': ['<name>', None, ['self']], 'translate': ['<name>', None, ['self', 'table']], 'upper': ['mayúsculo', None, ['self']], 'zfill': ['<name>', None, ['self', 'width']]}, ['args', 'kwargs'], [['object']]], 'sum': ['<name>', None, ['iterable', 'start']], 'super': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'tuple': ['<name>', {'count': ['<name>', None, ['self', 'value']], 'index': ['<name>', None, ['self', 'value', 'start', 'stop']]}, ['args', 'kwargs'], [['object']]], 'type': ['<name>', {}, ['args', 'kwargs'], [['object']]], 'vars': ['<name>', None, []], 'zip': ['<name>', {}, ['args', 'kwargs'], [['object']]]}], ('Pushed', {'nombre': ('nombre', {}, None, [['str']]), 'frase_para_escribir': ('frase_para_escribir', {}, None, [['int'], ['float']])}, None, []), ('Pushed', {'frase_para_escribir': ('frase_para_escribir', {}, None, [['nombre']])}, None, []), ('Pushed', {}, None, [])])
        for letra in palabra :
            func(letra)
        
    
    con_cada_letra(palabra,escribir_letra)

print("Doce es",frase_para_escribir.real)
en_bucle = True
while (en_bucle) :
    nombre = input("¿Cómo te llamas?")
    if nombre == "Oliver" :
        print("Ah, Hola Oliver!")
    
    elif nombre == "WebCoder49" :
        print("Bienvenido, WebCoder49!")
    
    else :
        print("No te he conocido antes.")
    
    letras_de_palabra(nombre)
    respuesta = input("¿Quieres jugar otra vez?")
    en_bucle = (respuesta.upper() == "SI")

print("Adiós!")